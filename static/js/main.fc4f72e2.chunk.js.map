{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","isLoading","setIsLoading","error","setError","movieData","setMovieData","setMovie","useMemo","undefined","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","item","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","Boolean","onClick","find","concat","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc4f72e2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, {\n  FormEvent,\n  useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\n// eslint-disable-next-line\nconst imdbUrl = 'https://mate-academy.github.io/react_movies-list-fetch-movies/images/imdb-logo.jpeg';\nconst defPoster = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [movieData, setMovieData] = useState<MovieData>();\n  const [movie, setMovie] = useState<Movie>();\n\n  const submitHandler = (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query)\n      .then(item => {\n        if ('Error' in item) {\n          setError(true);\n        } else {\n          setMovieData(item);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const addMovie = () => {\n    if (movie && !movies.find(item => item.imdbId === movie.imdbId)) {\n      setMovies(movies.concat(movie));\n    }\n\n    setQuery('');\n    setMovie(undefined);\n  };\n\n  useMemo(() => {\n    if (movieData !== undefined) {\n      setMovie({\n        title: movieData.Title,\n        description: movieData.Plot,\n        imgUrl: movieData.Poster || defPoster,\n        imdbUrl,\n        imdbId: movieData.imdbID,\n      });\n    }\n  }, [movieData]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button', 'is-light', { 'is-loading': isLoading },\n              )}\n              disabled={Boolean(!query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b77881c8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}